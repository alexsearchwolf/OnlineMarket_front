{"version":3,"sources":["serviceWorker.js","App.js","components/auth/Login.js","components/home/HomeAdmin.js","components/home/HomeUser.js","components/Header.js","components/Footer.js","components/Table.js","components/Users.js","components/User.js","components/Signin.js","components/Products.js","components/Product.js","components/UpdateUser.js","components/ProductsUser.js","index.js"],"names":["Boolean","window","location","hostname","match","App","className","Component","Login","props","handleInputChange","event","target","name","setState","value","handleSubmit","localStorage","setItem","btoa","state","email","pass","requestOptions","method","headers","getItem","body","JSON","stringify","fetch","then","response","ok","json","data","errorMessage","history","push","text","message","catch","error","console","log","preventDefault","onSubmit","this","type","placeholder","onChange","to","HomeAdmin","formAction","HomeUser","Header","logout","clear","home","onClick","xmlns","xmlnsXlink","width","height","viewBox","href","cursor","d","withRouter","Footer","Table","reload","e","heading","map","item","index","key","id","Object","entries","entry","buttons","btn","class","action","refreshPage","Users","url","gotourl","deleteUser","users","filter","user","alert","updateUser","basketUser","InterchangeableText","User","lastname","street","city","Signin","Products","deleteProduct","products","product","updateProduct","Product","handleChangea","handleChangeb","handleChangec","handleChanged","price","stock","size_id","size","sale_id","sale","color_id","color","item_id","bind","step","checked","UpdateUser","password","params","ProductsUser","addBasket","a","ReactDOM","render","path","component","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70956428.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component{\n    render() {\n      return (\n        <div className=\"app\">\n          <div className=\"app_title\">Welcome</div>\n          <div className=\"app_text\">Your eMarket has been successfully started</div>\n        </div>\n      );\n    }\n  }\nexport default App;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../style/components/auth/login.css';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {email:'', pass:'', errorMessage:''};\r\n    }\r\n\r\n    handleInputChange = (event) => {      \r\n        const target = event.target;\r\n        const name = target.name;\r\n      \r\n        this.setState({\r\n            [name]: target.value\r\n        });      \r\n    }    \r\n    \r\n    handleSubmit = (event) => {\r\n        localStorage.setItem(\"user\", btoa(this.state.email+\":\"+this.state.pass))\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization':'Basic '+ localStorage.getItem(\"user\")\r\n                //'Authorization':'Basic '+ localStorage.setItem(\"user\")\r\n                //'Authorization':'Basic '+ btoa(\"user2@example.com:pass\")\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                pass: this.state.pass\r\n            })\r\n        };\r\n        \r\n        fetch(\"http://localhost:8080/login\", requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                response.json().then(data => {\r\n                    this.setState({errorMessage: ''})\r\n                    localStorage.setItem(\"user\", btoa(data.email+\":\"+data.pass));\r\n                    {\r\n                    if (data.email===\"user2@example.com\" && data.pass===\"pass\"){\r\n                        this.props.history.push(\"/admin/home\");}\r\n                    else\r\n                        this.props.history.push(\"/user/home\");}\r\n                    \r\n                });\r\n            }else {\r\n                response.text().then(message => this.setState({errorMessage: message}))\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n        event.preventDefault();\r\n\r\n    };\r\n    render() {\r\n    \r\n        return (\r\n            <div className=\"login\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input \r\n                        type=\"email\" \r\n                        name=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        onChange={this.handleInputChange} />\r\n                    <br></br>\r\n                    <input \r\n                        type=\"password\" \r\n                        name=\"pass\" \r\n                        placeholder=\"Enter password\"\r\n                        onChange={this.handleInputChange} />\r\n                    <br></br>                   \r\n                    <input type=\"submit\" value=\"Login\" className=\"submit\" />\r\n                    <br></br>\r\n                    <label className=\"error\">{this.state.errorMessage}</label>\r\n                    <label className=\"info\">If you do not have account, please <Link to='/signin'>register</Link></label>\r\n                </form>\r\n            </div>           \r\n        )\r\n    }\r\n};\r\nexport default Login;","import React, { Component } from 'react';\r\nimport '../../style/home/home.css'\r\n\r\nclass HomeAdmin extends Component {\r\n  \r\nrender() {\r\n\r\n    return (\r\n        <div className=\"homeAdmin\">\r\n              <form>             \r\n                <button type=\"submit\" formAction=\"/admin/users\">All users</button>\r\n                <br></br>\r\n                <br></br>\r\n                <button type=\"submit\" formAction=\"/admin/adduser\">Add user</button>\r\n                <br></br>\r\n                <br></br>\r\n                <button type=\"submit\" formAction=\"/products\">All products</button>\r\n                <br></br>\r\n                <br></br>\r\n                <button type=\"submit\" formAction=\"/admin/product\">Add product</button>\r\n                <br></br>\r\n                <br></br>\r\n                <label className=\"info\">Admin dashboard</label>\r\n                </form>\r\n        </div> \r\n        )\r\n      }\r\n    };\r\n\r\n  \r\n  export default HomeAdmin;\r\n\r\n","import React, { Component } from 'react';\r\nimport '../../style/home/home.css'\r\n\r\nclass HomeUser extends Component {\r\n  \r\nrender() {\r\n\r\n    return (\r\n        <div className=\"homeUser\">\r\n              <form>             \r\n                <button type=\"submit\" formAction=\"/user/products\" method=\"get\">Products</button>\r\n                <br></br>\r\n                <br></br>\r\n                <button type=\"submit\" formAction=\"/basketUser\" method=\"get\">Basket</button>\r\n                <br></br>\r\n                <br></br>\r\n                <button type=\"btn3\">Edit profile</button>\r\n                <br></br>\r\n                <br></br>\r\n                <label className=\"info\">User dashboard</label>\r\n                </form>\r\n        </div> \r\n        )\r\n      }\r\n    };\r\n\r\n  \r\n  export default HomeUser;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport '../style/common/header.css';\r\n\r\nclass Header extends Component {\r\n\r\n    logout = () => {\r\n        localStorage.clear(); \r\n        this.props.history.push(\"/login\");\r\n    }\r\n    home = () => {\r\n        if (localStorage.getItem(\"user\")===btoa(\"user2@example.com:pass\"))\r\n        {\r\n            this.props.history.push(\"/admin/home\");}\r\n        else\r\n            this.props.history.push(\"/user/home\");\r\n        }\r\n    \r\n    render() {\r\n        return (\r\n        <div className=\"header\">\r\n            \r\n            {                \r\n                 localStorage.getItem(\"user\") ?                        \r\n                        <div className=\"dashboard\" onClick={()=>this.home()}>Dashboard</div>             \r\n                :\r\n                <Link className=\"signin\" to=\"/signin\">Signin</Link> \r\n            }\r\n            <div className=\"svg\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\r\n                <title>go home</title>\r\n            <a href=\"/\" target=\"_top\" cursor=\"pointer\"><path d=\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\"/></a> </svg>  \r\n            </div>\r\n            \r\n            {                \r\n                 localStorage.getItem(\"user\") ?                        \r\n                        <div className=\"logout\" onClick={()=>this.logout()}>Logout</div>              \r\n                :\r\n                    <Link className=\"login-button\" to=\"/login\">Login</Link>\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withRouter(Header);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport '../style/common/footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n        <div className=\"footer\">\r\n            <span>Online Market 2019</span>\r\n        </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport '../style/common/table.css';\r\n\r\nclass Table extends Component {\r\n\r\n    refreshPage(){\r\n        window.location.reload();\r\n        \r\n    }\r\n    updateInputValue(e) {\r\n        const { target: {value} } = e;\r\n        this.setState({ name: value });\r\n     }\r\n    render() {\r\n        return (\r\n            <div className=\"table_wrapper\">\r\n            {\r\n                this.props.data && \r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                        {\r\n                            this.props.heading.map((item, index)=>{\r\n                                return (\r\n                                    <th key={index}>{item}</th>\r\n                                )\r\n                            })\r\n                        }\r\n                        </tr>     \r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.data.map(item => {\r\n                                return (\r\n                                    <tr key={item.id}>\r\n                                    {\r\n                                        Object.entries(item).map(entry => (\r\n                                            <td key={entry[1]}>{entry[1]}</td>\r\n                                            \r\n                                        ))\r\n                                    }\r\n                                    \r\n                                    {\r\n                                        this.props.buttons.map(btn => (\r\n                                            <td key={btn.name}><button className={btn.class} onClick={()=>{btn.action(item.id);this.refreshPage()}}>{btn.name}</button></td>\r\n                                        ))\r\n                                    }    \r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </tbody>\r\n              </table>\r\n            }                    \r\n        </div>\r\n        ) \r\n};\r\n}\r\nexport default Table;\r\n\r\n  ","import React, { Component } from 'react';\r\nimport '../style/common/getall.css';\r\nimport Table from '../components/Table';\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {users: []};\r\n    }\r\n\r\nurl = () => {\r\n    this.props.history.push(\"/admin/adduser\");}\r\n    \r\n\r\n    componentDidMount(){\r\n        if(localStorage.getItem('user') === null) {\r\n            this.props.history.push('/login');\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Basic '+localStorage.getItem(\"user\")\r\n                }\r\n            };\r\n            fetch(\"http://localhost:8080/users\", requestOptions)\r\n            .then(response => {\r\n                if(response.ok) {\r\n                    response.json().then(data =>\r\n                        this.setState({users: data})    \r\n                    )\r\n                }else {\r\n                    response.text().then(message => alert(message))\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n        }    \r\n    }\r\n    gotourl = () => {\r\n        this.props.history.push(\"/admin/update/\");\r\n    }\r\n\r\n    deleteUser = (id) => {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic '+localStorage.getItem(\"user\")},\r\n        };\r\n        fetch(\"http://localhost:8080/userDelete/\"+id, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                response.json().then(data => \r\n                    this.setState({users: this.state.users.filter(user => user.id!==data.id)})\r\n                );\r\n            }else {\r\n                response.text().then(message => alert(message))\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    updateUser = () => {\r\n        this.props.history.push(\"/admin/updateUser/\");\r\n    }\r\n /*   updateUser = (id) => { \r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic '+localStorage.getItem(\"user\")\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.users.name,\r\n                lastname: this.state.users.lastname,\r\n                email: this.state.users.email,\r\n                street: this.state.users.street,\r\n                city: this.state.users.city\r\n            })\r\n        };\r\n       fetch(\"http://localhost:8080/userUpdate/\"+ id, requestOptions)\r\n       .then(response => {\r\n        if(response.ok) {\r\n            response.json().then(data => {\r\n                this.setState({errorMessage: ''})\r\n                this.props.history.push(\"/admin/users\");\r\n            });\r\n        }else {\r\n            response.text().then(message => this.setState({errorMessage: message}))\r\n        }\r\n    })\r\n    .catch(error => console.log(error))\r\n    }*/\r\n    render() {\r\n        const heading=[\"Id\", \"Name\", \"Lastname\", \"Email\", \"Street\", \"City\", \"Role\", \"Suma\", \"\", \"\", \"\"];\r\n        const buttons=[\r\n            {name: \"Basket\", action: this.basketUser, class: \"btn-update\"},\r\n            {name: \"Update\", action: this.updateUser, class: \"btn-update\"}, \r\n            {name: \"Delete\", action: this.deleteUser, class: \"btn-update\"}];\r\n    return (\r\n        <div className=\"products_wrapper\">\r\n\r\n               <input className=\"btn_add\" type=\"button\" onClick={()=>this.url()} value=\"Add new user\"/>    \r\n            \r\n                {\r\n                    this.state.users && \r\n                    <Table heading={heading} InterchangeableText data={this.state.users} buttons={buttons}></Table>\r\n                    \r\n                } \r\n                \r\n        </div>\r\n    )\r\n}  \r\n};    \r\nexport default Users;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport '../style/components/auth/register.css';\r\n\r\nclass User extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={email:'', name:'', lastname:'', street:'', city:'', pass:'', errorMessage:''};\r\n    }\r\n\r\n    handleInputChange = (event) => {      \r\n        const target = event.target;\r\n        const name = target.name;     \r\n        this.setState({\r\n            [name]: target.value\r\n        });      \r\n    }    \r\n    \r\n    handleSubmit = (event) => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',               \r\n                'Authorization':'Basic '+ btoa(\"user2@example.com:pass\")\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                pass: this.state.pass,\r\n                name: this.state.name,\r\n                lastname: this.state.lastname,\r\n                street: this.state.street,\r\n                city: this.state.city\r\n            })\r\n        };\r\n\r\n        fetch('http://localhost:8080/signin', requestOptions)\r\n        .then(response => {\r\n            if(response.ok){\r\n                response.json().then(data =>{ \r\n                    this.setState({errorMessage: ''})\r\n                    this.props.history.push(\"/admin/users\");\r\n                });\r\n            }else{\r\n                response.text().then(message => this.setState({errorMessage:message}))\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n        event.preventDefault();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login\">\r\n                <form onSubmit={this.handleSubmit} className=\"register\">\r\n            \r\n             <input \r\n                    type=\"text\" \r\n                    name=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={this.handleInputChange} />\r\n\r\n               <input \r\n                    type=\"password\" \r\n                    name=\"pass\" \r\n                    placeholder=\"Enter password\"\r\n                    onChange={this.handleInputChange} />\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    onChange={this.handleInputChange} />\r\n\r\n               <input \r\n                    type=\"text\" \r\n                    name=\"lastname\" \r\n                    placeholder=\"Enter lastname\"\r\n                    onChange={this.handleInputChange} /> \r\n                <input \r\n                    type=\"text\" \r\n                    name=\"street\"\r\n                    placeholder=\"Enter street\"\r\n                    onChange={this.handleInputChange} />\r\n\r\n               <input \r\n                    type=\"text\" \r\n                    name=\"city\" \r\n                    placeholder=\"Enter city\"\r\n                    onChange={this.handleInputChange} />\r\n                                    \r\n                <input type=\"submit\" value=\"Add user\" className=\"submit\" />\r\n                <label className=\"error\">{this.state.errorMessage}</label>\r\n            </form>\r\n        \r\n        </div>\r\n        )\r\n    };\r\n}\r\nexport default User;","import React, { Component } from 'react';\r\nimport '../style/components/auth/register.css';\r\n\r\nclass Signin extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={email:'', name:'', lastname:'', street:'', city:'', pass:'', errorMessage:''};\r\n    }\r\n\r\n    handleInputChange = (event) => {      \r\n        const target = event.target;\r\n        const name = target.name;\r\n      \r\n        this.setState({\r\n            [name]: target.value\r\n        });      \r\n    }    \r\n    \r\n    handleSubmit = (event) => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',               \r\n                'Authorization':'Basic '+ btoa(\"user2@example.com:pass\")\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                pass: this.state.pass,\r\n                name: this.state.name,\r\n                lastname: this.state.lastname,\r\n                street: this.state.street,\r\n                city: this.state.city\r\n            })\r\n        };\r\n\r\n        fetch('http://localhost:8080/signin', requestOptions)\r\n        .then(response => {\r\n            if(response.ok){\r\n                response.json().then(data =>{ \r\n                    this.setState({errorMessage: ''})\r\n                    localStorage.setItem(\"user\", btoa(data.email+\":\"+data.pass));\r\n                    this.props.history.push(\"/user/home\");\r\n                });\r\n            }else{\r\n                response.text().then(message => this.setState({errorMessage:message}))\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n        event.preventDefault();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"login\">\r\n                <form onSubmit={this.handleSubmit} className=\"register\">\r\n            \r\n             <input \r\n                    type=\"text\" \r\n                    name=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    onChange={this.handleInputChange} />\r\n\r\n               <input \r\n                    type=\"password\" \r\n                    name=\"pass\" \r\n                    placeholder=\"Enter password\"\r\n                    onChange={this.handleInputChange} />\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    onChange={this.handleInputChange} />\r\n\r\n               <input \r\n                    type=\"text\" \r\n                    name=\"lastname\" \r\n                    placeholder=\"Enter lastname\"\r\n                    onChange={this.handleInputChange} /> \r\n                <input \r\n                    type=\"text\" \r\n                    name=\"street\"\r\n                    placeholder=\"Enter street\"\r\n                    onChange={this.handleInputChange} />\r\n\r\n               <input \r\n                    type=\"text\" \r\n                    name=\"city\" \r\n                    placeholder=\"Enter city\"\r\n                    onChange={this.handleInputChange} />\r\n                                    \r\n                <input type=\"submit\" value=\"Signin\" className=\"submit\" />\r\n                <label className=\"error\">{this.state.errorMessage}</label>\r\n            </form>\r\n        \r\n        </div>\r\n        )\r\n    };\r\n}\r\nexport default Signin;","import React, { Component } from 'react';\r\nimport Table from '../components/Table';\r\nimport '../style/common/getall.css';\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {products: []};\r\n    }\r\n\r\n    url = () => {\r\n        this.props.history.push(\"/admin/product\");}\r\n      \r\n    componentDidMount(){\r\n        if(localStorage.getItem('user') === null) {\r\n            this.props.history.push('/login');\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Basic '+localStorage.getItem(\"user\")\r\n                }\r\n            };\r\n            fetch(\"http://localhost:8080/products\", requestOptions)\r\n            .then(response => {\r\n                if(response.ok) {\r\n                    response.json().then(data =>\r\n                        this.setState({products: data})    \r\n                    )\r\n                }else {\r\n                    response.text().then(message => alert(message))\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n        }    \r\n    }\r\n     \r\n    deleteProduct = (id) => {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic '+localStorage.getItem(\"user\")},\r\n        };\r\n        fetch(\"http://localhost:8080/productDelete/\"+id, requestOptions)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                response.json().then(data => \r\n                    this.setState({products: this.state.products.filter(product => product.id!==data.id)})\r\n                );\r\n            }else {\r\n                response.text().then(message => alert(message))\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        const heading=[\"Id\", \"Name\", \"Price\", \"Stock\", \"Size\", \"Sale\", \"Color\", \"Item\", \"\", \"\"];\r\n        const buttons=[\r\n            {name: \"Update\", action: this.updateProduct, class: \"btn-update\"}, \r\n            {name: \"Delete\", action: this.deleteProduct, class: \"btn-update\"}];\r\n    return (\r\n        <div className=\"products_wrapper\">\r\n    \r\n              <input className=\"btn_add\" type=\"button\" onClick={()=>this.url()} value=\"Add new product\"/>    \r\n             {\r\n                    this.state.products && \r\n                    <Table heading={heading} data={this.state.products} buttons={buttons}></Table>\r\n                    \r\n                } \r\n                \r\n            </div>\r\n    )\r\n}  \r\n};    \r\nexport default Products;","import React, { Component } from 'react';\r\nimport '../style/components/product.css'\r\n\r\nclass Product extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleChangea = this.handleChangea.bind(this);\r\n        this.handleChangeb = this.handleChangeb.bind(this);\r\n        this.handleChangec = this.handleChangec.bind(this);\r\n        this.handleChanged = this.handleChanged.bind(this);\r\n        this.state ={\r\n            name:'', price:'', stock:'', size_id:'', sale_id:'',color_id:'', item_id:'', errorMessage:''\r\n        };\r\n    }\r\n\r\n    handleInputChange = (event) => {      \r\n        const target = event.target;\r\n        const name = target.name;      \r\n        this.setState({\r\n            [name]: target.value\r\n        });      \r\n    }    \r\n    handleChangea = (event) => {      \r\n        const target = event.target;\r\n        const name = target.name;      \r\n        this.setState({\r\n            [name]: target.value\r\n        });      \r\n    } \r\n    handleChangeb = (event) => {      \r\n        const target = event.target;\r\n        const name = target.name;      \r\n        this.setState({\r\n            [name]: target.value\r\n        });      \r\n    } \r\n    handleChangec = (event) => {      \r\n        const target = event.target;\r\n        const name = target.name;      \r\n        this.setState({\r\n            [name]: target.value\r\n        });      \r\n    } \r\n    handleChanged = (event) => {      \r\n        const target = event.target;\r\n        const name = target.name;      \r\n        this.setState({\r\n            [name]: target.value\r\n        });      \r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers:{\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic '+localStorage.getItem(\"user\")\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                price: this.state.price,\r\n                stock: this.state.stock,\r\n                size_id: this.state.size,\r\n                sale_id: this.state.sale,\r\n                color_id: this.state.color,\r\n                item_id: this.state.item\r\n            })\r\n        };\r\n\r\n        fetch('http://localhost:8080/product', requestOptions)\r\n        .then(response => {\r\n            if(response.ok){\r\n                response.json().then(data =>{ \r\n                    this.setState({errorMessage: ''})                   \r\n                    this.props.history.push(\"/products\");\r\n                });\r\n            }else{\r\n                response.text().then(message => this.setState({errorMessage:message}))\r\n            }\r\n        })\r\n        .catch(error => console.log(error))\r\n        event.preventDefault();\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"product\">\r\n            <form className=\"product_form\" onSubmit={this.handleSubmit}>\r\n               <input \r\n                    type=\"text\" \r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    onChange={this.handleInputChange} />\r\n\r\n               <input \r\n                    type=\"number\"\r\n                    step=\"any\" \r\n                    name=\"price\" \r\n                    placeholder=\"Enter price\"\r\n                    onChange={this.handleInputChange} />\r\n                <input \r\n                    type=\"number\" \r\n                    name=\"stock\"\r\n                    placeholder=\"Enter stock\"\r\n                    onChange={this.handleInputChange} />\r\n            \r\n                <table className=\"table\">\r\n                    <tbody>\r\n                    \r\n                    <tr>\r\n                    <td>\r\n                    <div id=\"size_column\" >\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"size\" checked={this.state.size === \"1\"} onChange={this.handleInputChange} value=\"1\"/>xs</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"size\" checked={this.state.size === \"2\"} onChange={this.handleInputChange} value=\"2\"/>s</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"size\" checked={this.state.size === \"3\"} onChange={this.handleInputChange} value=\"3\"/>m</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"size\" checked={this.state.size === \"4\"} onChange={this.handleInputChange} value=\"4\"/>l</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"size\" checked={this.state.size === \"5\"} onChange={this.handleInputChange} value=\"5\"/>xl</label></div>\r\n                        \r\n                    </td>\r\n                    </tr>\r\n                    </tbody>\r\n                \r\n                \r\n                <tbody>\r\n                <tr>\r\n                <td>\r\n                <div id=\"sale_column\">\r\n                       <label><input className=\"dot\" type=\"radio\" name=\"sale\" checked={this.state.sale === \"1\"} onChange={this.handleChangeb} value=\"1\"/>on sale</label>\r\n                       <label><input className=\"dot\" type=\"radio\" name=\"sale\" checked={this.state.sale === \"2\"} onChange={this.handleChangeb} value=\"2\"/>not on sale</label></div>\r\n                    </td>\r\n                    </tr>\r\n                    </tbody>\r\n                    <tbody>\r\n                    \r\n                    <tr>\r\n                    <td>\r\n                    <div id=\"item_column\">\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"item\" checked={this.state.item === \"1\"} onChange={this.handleChangec} value=\"1\"/>bluza</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"item\" checked={this.state.item === \"2\"} onChange={this.handleChangec} value=\"2\"/>pantalone</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"item\" checked={this.state.item === \"3\"} onChange={this.handleChangec} value=\"3\"/>haljina</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"item\" checked={this.state.item === \"4\"} onChange={this.handleChangec} value=\"4\"/>suknja</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"item\" checked={this.state.item === \"5\"} onChange={this.handleChangec} value=\"5\"/>jakna</label></div>\r\n                    </td>\r\n                    </tr>\r\n                    </tbody>\r\n                    <tbody>                   \r\n                    <tr>\r\n                    <td>\r\n                    <div id=\"color_column\">\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"color\" checked={this.state.color === \"1\"} onChange={this.handleChanged} value=\"1\"/>bela</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"color\" checked={this.state.color === \"2\"} onChange={this.handleChanged} value=\"2\"/>crna</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"color\" checked={this.state.color === \"3\"} onChange={this.handleChanged} value=\"3\"/>crvena</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"color\" checked={this.state.color === \"4\"} onChange={this.handleChanged} value=\"4\"/>zelena</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"color\" checked={this.state.color === \"5\"} onChange={this.handleChanged} value=\"5\"/>plava</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"color\" checked={this.state.color === \"6\"} onChange={this.handleChanged} value=\"6\"/>zuta</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"color\" checked={this.state.color === \"7\"} onChange={this.handleChanged} value=\"7\"/>ljubicasto</label>\r\n                        <label> <input className=\"dot\" type=\"radio\" name=\"color\" checked={this.state.color === \"8\"} onChange={this.handleChanged} value=\"8\"/>sareno</label></div>\r\n                    </td>\r\n                    </tr>\r\n                    </tbody>              \r\n                </table>\r\n                <input type=\"submit\" value=\"Add product\" className=\"submit\" />\r\n                <label className=\"error\">{this.state.errorMessage}</label>\r\n               </form>\r\n           </div>\r\n      \r\n        \r\n        )\r\n    };\r\n}\r\nexport default Product;","import React, { Component } from 'react';\r\n\r\nclass UpdateUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {users:[],name:'',lastname:'',email:'',password:'', errorMessage:''};\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            users: {...this.state.users, [name]: target.value}\r\n        });    \r\n    } \r\n    \r\n    componentDidMount() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic '+localStorage.getItem(\"user\")\r\n            },\r\n        };\r\n            fetch(\"http://localhost:8080/userUpdate/\"+this.props.match.params.id, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({users: data})\r\n            });\r\n   \r\n    }\r\n    handleSubmit = (event) => {\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Basic '+localStorage.getItem(\"user\")\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.users.name,\r\n                lastname: this.state.users.lastname,\r\n                email: this.state.users.email,\r\n                password: this.state.users.password,\r\n            })\r\n        };\r\n        \r\n        fetch(\"http://localhost:8080/userUpdate/\"+this.state.users.id, requestOptions)\r\n        .then(response => \r\n            {\r\n                if(response.ok) {\r\n                    response.json().then(data => {\r\n                        this.setState({errorMessage: ''})\r\n                        this.props.history.push(\"/admin/users/\");\r\n                    });\r\n                }else {\r\n                    response.text().then(message => this.setState({errorMessage: message}))\r\n                }\r\n            })\r\n        .catch(error => console.log(error))\r\n        event.preventDefault();\r\n\r\n    };\r\n    render() \r\n    {\r\n        return (\r\n            <div className=\"login\">\r\n            {\r\n            this.state.users &&\r\n             <form onSubmit={this.handleSubmit}>\r\n                <div>\r\n                <label>Change name:</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"name\"\r\n                    value={this.state.users.name}\r\n                    onChange={this.handleInputChange} />\r\n                 </div>\r\n                 <div>\r\n                <label>Change lastname:</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"lastname\"\r\n                    value={this.state.users.lastname}\r\n                    onChange={this.handleInputChange} />\r\n                 </div>\r\n                 <div>\r\n                <label>Change email:</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"email\"\r\n                    value={this.state.users.email}\r\n                    onChange={this.handleInputChange} />\r\n                 </div>\r\n                 <div>\r\n                <label>Change password:</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    name=\"password\"\r\n                    value={this.state.users.password}\r\n                    onChange={this.handleInputChange} />\r\n                 </div>{\r\n                        \r\n                    }\r\n                \r\n                               \r\n                <input type=\"submit\" value=\"Change\" className=\"submit\" onClick={()=>this.props.history.push(\"/admin/users\")} />\r\n                <input type=\"button\" value=\"Cancel\" className=\"cancel\" onClick={()=>this.props.history.push(\"/admin/users\")} />\r\n               \r\n                <label className=\"error\">{this.state.errorMessage}</label>\r\n            </form>\r\n            }\r\n            </div>  \r\n           \r\n        )\r\n    }\r\n};\r\nexport default UpdateUser;","import React, { Component } from 'react';\r\nimport Table from '../components/Table';\r\nimport '../style/common/getall.css';\r\n\r\nclass ProductsUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {products: [],errorMessage:''};\r\n    }\r\n \r\n    addBasket = (id) => {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Basic '+ localStorage.getItem(\"user\")\r\n                },\r\n                body: JSON.stringify({\r\n                    product: id,\r\n                })\r\n            };\r\n            fetch(\"http://localhost:8080/3/addProductBasket\", requestOptions)\r\n            .then(response => {\r\n                if(response.ok){\r\n                    response.json().then(data =>{ \r\n                        this.setState({errorMessage: ''})                       \r\n                    });\r\n                }else{\r\n                    response.text().then(message => this.setState({errorMessage:message}))\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n        };\r\n    \r\n\r\n    componentDidMount(){\r\n        if(localStorage.getItem(\"user\") === null) {\r\n            this.props.history.push(\"/login\");\r\n        } else {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Basic '+ localStorage.getItem(\"user\")\r\n                }\r\n            };\r\n            fetch(\"http://localhost:8080/products\", requestOptions)\r\n            .then(response => {\r\n                if(response.ok) {\r\n                    response.json().then(data =>\r\n                        this.setState({products: data}))\r\n                    \r\n                }else {\r\n                    response.text().then(message => alert(message))\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n        }    \r\n    }\r\n  \r\n\r\n    render() {\r\n\r\n        const heading=[\"Id\", \"Name\", \"Price\", \"Stock\", \"Size\", \"Sale\", \"Color\", \"Item\", \"\"];\r\n        const buttons=[{name: \"Add\", action: this.addBasket, class: \"btn-update\"}];\r\n    return (      \r\n        <div className=\"products_wrapper\">\r\n            <input className=\"btn_add\" type=\"button\" onClick={()=>this.a()} value=\"Basket\"/>        \r\n             {\r\n                    this.state.products && \r\n                    <Table heading={heading} data={this.state.products} buttons={buttons}></Table>\r\n                    \r\n                } \r\n                \r\n            </div>\r\n    )\r\n}  \r\n};    \r\nexport default ProductsUser;","import * as serviceWorker from './serviceWorker';\n\nimport React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport Login from './components/auth/Login';\nimport HomeAdmin from './components/home/HomeAdmin';\nimport HomeUser from './components/home/HomeUser';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Users from './components/Users';\nimport User from './components/User';\nimport Signin from './components/Signin';\nimport Products from './components/Products';\nimport Product from './components/Product';\n//import Update from './components/Update';\nimport UpdateUser from './components/UpdateUser';\nimport ProductsUser from './components/ProductsUser';\n//import BasketUser from './components/Basket';\n\nReactDOM.render(\n    <Router>\n        <Fragment>\n        <Header></Header>\n          <Switch>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/signin\" component={Signin}/>\n          <Route path=\"/admin/home\" component={HomeAdmin}/>   \n          <Route path=\"/user/home\" component={HomeUser}/>            \n          <Route path=\"/admin/users\" component={Users}/> \n          <Route path=\"/products\" component={Products}/> \n          <Route path=\"/admin/product\" component={Product}/> \n          <Route path=\"/admin/adduser\" component={User}/> \n          \n          <Route path=\"/admin/updateUser\" component={UpdateUser}/>\n          <Route path=\"/user/products\" component={ProductsUser}/>\n        \n          <Route exact path=\"/\" component={App} />\n          </Switch>\n        <Footer></Footer>\n      </Fragment>\n    </Router>, document.getElementById('root'));\nserviceWorker.unregister();\n\n\n /* <Route path=\"/user/basket\" component={BasketUser}/>\n <Route path=\"/admin/update\" component={Update}/>*/"],"sourceRoot":""}